searchState.loadedDescShard("arm_gicv2", 0, "arm_gicv2\nEdge-triggered.\nGICC_CTLR register bits. bit 0 EnableGrp0: Enable for the …\nGICC_CTLR register bits: bit 9 EOImodeNS: Controls the …\nNumber of bits used to configure the trigger mode for each …\nMaximum number of interrupts supported by the GIC.\nThe GIC CPU interface.\nThe GIC distributor.\nDifferent types of interrupt that the GIC handles.\nLevel-sensitive.\nPrivate Peripheral Interrupt.\nInterrupt ID 16-31 are used for PPIs (Private Peripheral …\nSoftware-generated interrupt.\nInterrupt ID 0-15 are used for SGIs (Software-generated …\nShared Peripheral Interrupt.\nInterrupt ID 32-1019 are used for SPIs (Shared Peripheral …\nInterrupt trigger mode.\nConfigures the trigger mode for the given interrupt.\nThe number of implemented CPU interfaces.\nDeactivate interrupt. (write GICC_DIR)\nInforms the CPU interface that it has completed the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nControls the CPU interface, including enabling of …\nCheck the given interrupt is Enable or disable.\nGet iidr register.\nGet interrupt priority.\nGet interrupt state. Depend on its active state and …\nGet interrupt target cpu.\nProvides information about the configuration of this …\nhandles the signaled interrupt.\nReturns the interrupt ID of the highest priority pending …\nInitializes the GIC distributor.\nInitializes the GIC CPU interface.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum number of interrupts that the GIC supports\nConstruct a new GIC distributor instance from the base …\nConstruct a new GIC CPU interface instance from the base …\nSend ipi to processor specified by <code>dest_cpu_id</code>.\nSends an IPI to every processor, excluding the current one.\nSends an IPI to the current processor.\nSet interrupt state to active or not.\nControls the CPU interface, including enabling of …\nEnables or disables the given interrupt.\nDetermines whether the corresponding interrupt is …\nSet interrupt state to pending or not.\nSet interrupt priority.\nSet interrupt state. Depend on its active state and …\nSet interrupt target cpu.\nTranslate an interrupt of a given type to a GIC INTID.")